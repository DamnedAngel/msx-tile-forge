name: Reusable Linux & Debian Build

on:
  workflow_call:
    inputs:
      prepared_source_artifact_name:
        description: 'The name of the prepared source code artifact to download'
        required: true
        type: string
      lin_filename:
        description: 'The final, desired filename for the .tar.gz package'
        required: true
        type: string
      deb_filename:
        description: 'The final, desired filename for the .deb package'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Download prepared source code
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.prepared_source_artifact_name }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install System & Python Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y make build-essential fakeroot devscripts dh-python python3-all debhelper-compat=13
          python -m pip install pyinstaller Pillow numpy scipy platformdirs tqdm

      - name: Build Linux binary and Debian package
        run: make lin deb LIN_TGZ=${{ inputs.lin_filename }}

      - name: Find and rename Debian package
        shell: bash
        run: |
          # debuild creates the .deb in the parent directory, so we look for it there
          DEB_FILE=$(find .. -maxdepth 1 -name "*.deb")
          echo "Found Debian package at: $DEB_FILE"
          echo "Renaming to: dist/${{ inputs.deb_filename }}"
          mv "$DEB_FILE" "dist/${{ inputs.deb_filename }}"

      - name: Upload final Linux and Debian artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-artifacts
          path: dist/